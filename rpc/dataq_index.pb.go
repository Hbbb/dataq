// Code generated by protoc-gen-dataq-index. DO NOT EDIT.

package rpc

func (m *ExtractRequest) SchemaKind() string {
	return "ExtractRequest"
}

func (m *ExtractRequest) Metadata() map[string]interface{} {
	metadata := make(map[string]interface{})

	if m.PluginId != "" {
		metadata["plugin_id"] = m.PluginId
	}
	if m.Hash != "" {
		metadata["hash"] = m.Hash
	}
	if m.Kind != "" {
		metadata["kind"] = m.Kind
	}
	if m.Metadata != nil {
		metadata["metadata"] = m.Metadata
	}
	return metadata
}

func (m *ExtractResponse) SchemaKind() string {
	return "ExtractResponse"
}

func (m *ExtractResponse) Metadata() map[string]interface{} {
	metadata := make(map[string]interface{})

	if m.Kind != "" {
		metadata["kind"] = m.Kind
	}
	if m.RequestHash != "" {
		metadata["request_hash"] = m.RequestHash
	}
	if m.Hash != "" {
		metadata["hash"] = m.Hash
	}
	if m.Content != nil {
		metadata["content"] = m.Content
	}
	if m.Transforms != nil {
		metadata["transforms"] = m.Transforms
	}
	return metadata
}

func (m *TransformRequest) SchemaKind() string {
	return "TransformRequest"
}

func (m *TransformRequest) Metadata() map[string]interface{} {
	metadata := make(map[string]interface{})

	if m.Hash != "" {
		metadata["hash"] = m.Hash
	}
	if m.Kind != "" {
		metadata["kind"] = m.Kind
	}
	if m.Metadata != nil {
		metadata["metadata"] = m.Metadata
	}
	return metadata
}

func (m *TransformResponse) SchemaKind() string {
	return "TransformResponse"
}

func (m *TransformResponse) Metadata() map[string]interface{} {
	metadata := make(map[string]interface{})

	if m.Hash != "" {
		metadata["hash"] = m.Hash
	}
	if m.Kind != "" {
		metadata["kind"] = m.Kind
	}
	if m.RequestHash != "" {
		metadata["request_hash"] = m.RequestHash
	}
	if m.Extracts != nil {
		metadata["extracts"] = m.Extracts
	}
	if m.Permanodes != nil {
		metadata["permanodes"] = m.Permanodes
	}
	return metadata
}

func (m *DataSource) SchemaKind() string {
	return "DataSource"
}

func (m *DataSource) Metadata() map[string]interface{} {
	metadata := make(map[string]interface{})

	if m.PermanodeHash != "" {
		metadata["permanode_hash"] = m.PermanodeHash
	}
	if m.TransformResponseHash != "" {
		metadata["transform_response_hash"] = m.TransformResponseHash
	}
	if m.Plugin != "" {
		metadata["plugin"] = m.Plugin
	}
	if m.Key != "" {
		metadata["key"] = m.Key
	}
	return metadata
}

func (m *PermanodeVersion) SchemaKind() string {
	return "PermanodeVersion"
}

func (m *PermanodeVersion) Metadata() map[string]interface{} {
	metadata := make(map[string]interface{})

	if m.PermanodeHash != "" {
		metadata["permanode_hash"] = m.PermanodeHash
	}
	if m.Timestamp != 0 {
		metadata["timestamp"] = m.Timestamp
	}
	if m.Deleted != false {
		metadata["deleted"] = m.Deleted
	}
	if m.Source != nil {
		metadata["source"] = m.Source
	}
	if m.Email != nil {
		metadata["email"] = m.Email
	}
	if m.FinancialTransaction != nil {
		metadata["financial_transaction"] = m.FinancialTransaction
	}
	return metadata
}
